[{"D:\\my-portfolio\\src\\pages\\index.js":"1","D:\\my-portfolio\\src\\components\\Contact\\index.js":"2","D:\\my-portfolio\\src\\components\\ButtonElements.js":"3","D:\\my-portfolio\\src\\index.js":"4","D:\\my-portfolio\\src\\components\\Projects\\index.js":"5","D:\\my-portfolio\\src\\components\\Navbar\\index.js":"6","D:\\my-portfolio\\src\\components\\Projects\\ProjectsElements.js":"7","D:\\my-portfolio\\src\\components\\Navbar\\NavbarElements.js":"8","D:\\my-portfolio\\src\\components\\Title\\index.js":"9","D:\\my-portfolio\\src\\components\\About\\index.js":"10","D:\\my-portfolio\\src\\themes\\theme.js":"11","D:\\my-portfolio\\src\\components\\Slider\\index.js":"12","D:\\my-portfolio\\src\\components\\Slider\\SliderElements.js":"13","D:\\my-portfolio\\src\\components\\About\\Data.js":"14","D:\\my-portfolio\\src\\components\\Projects\\Data.js":"15","D:\\my-portfolio\\src\\components\\Sidebar\\index.js":"16","D:\\my-portfolio\\src\\components\\Sidebar\\SidebarElements.js":"17","D:\\my-portfolio\\src\\App.js":"18","D:\\my-portfolio\\src\\components\\Footer\\FooterElements.js":"19","D:\\my-portfolio\\src\\components\\Footer\\index.js":"20"},{"size":1150,"mtime":1608606944722,"results":"21","hashOfConfig":"22"},{"size":1715,"mtime":1608609284839,"results":"23","hashOfConfig":"22"},{"size":1989,"mtime":1608598546905,"results":"24","hashOfConfig":"22"},{"size":298,"mtime":1608204993620,"results":"25","hashOfConfig":"22"},{"size":9571,"mtime":1608598332951,"results":"26","hashOfConfig":"22"},{"size":3032,"mtime":1608609965475,"results":"27","hashOfConfig":"22"},{"size":3624,"mtime":1608612676905,"results":"28","hashOfConfig":"22"},{"size":2541,"mtime":1608560778453,"results":"29","hashOfConfig":"22"},{"size":1690,"mtime":1608509133512,"results":"30","hashOfConfig":"22"},{"size":1366,"mtime":1608473521066,"results":"31","hashOfConfig":"22"},{"size":48,"mtime":1608205230636,"results":"32","hashOfConfig":"22"},{"size":5753,"mtime":1608469071915,"results":"33","hashOfConfig":"22"},{"size":1891,"mtime":1608468952116,"results":"34","hashOfConfig":"22"},{"size":727,"mtime":1608555862312,"results":"35","hashOfConfig":"22"},{"size":3245,"mtime":1608611832684,"results":"36","hashOfConfig":"22"},{"size":1707,"mtime":1608514939274,"results":"37","hashOfConfig":"22"},{"size":2667,"mtime":1608515066774,"results":"38","hashOfConfig":"22"},{"size":235,"mtime":1608309027727,"results":"39","hashOfConfig":"22"},{"size":1452,"mtime":1608610939450,"results":"40","hashOfConfig":"22"},{"size":2299,"mtime":1608611266663,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17irjar",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\my-portfolio\\src\\pages\\index.js",[],"D:\\my-portfolio\\src\\components\\Contact\\index.js",[],["90","91"],"D:\\my-portfolio\\src\\components\\ButtonElements.js",[],["92","93"],"D:\\my-portfolio\\src\\index.js",[],"D:\\my-portfolio\\src\\components\\Projects\\index.js",[],"D:\\my-portfolio\\src\\components\\Navbar\\index.js",["94","95"],"D:\\my-portfolio\\src\\components\\Projects\\ProjectsElements.js",[],"D:\\my-portfolio\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\my-portfolio\\src\\components\\Title\\index.js",[],"D:\\my-portfolio\\src\\components\\About\\index.js",["96","97"],"import React from 'react'\r\nimport { Button } from '../ButtonElements'\r\nimport { AboutContainer, AboutWrapper, AboutRow, Column1, Column2, TextWrapper, TopLine, TopLineText, Heading, Subtitle, ImgWrap, Img, BtnWrap } from './AboutElements'\r\n\r\nconst About = ({ lightBg, id, imgStart, topLine, lightText, darkText, firstParagraph, secondParagraph, headline, img, alt }) => {\r\n    return (\r\n        <>\r\n            <AboutContainer lightBg={lightBg} id={id}>\r\n                <AboutWrapper>\r\n                    <AboutRow imgStart={imgStart}>\r\n                        <Column1>\r\n                            <TextWrapper>\r\n                                <Heading lightText={lightText}>{headline}</Heading>\r\n                                <TopLine>&#x2015; <TopLineText>{topLine}</TopLineText> &#x2015;</TopLine>\r\n                                <Subtitle darkText={darkText}>{firstParagraph} <br /><br /> {secondParagraph}</Subtitle>\r\n                            </TextWrapper>\r\n                        </Column1>\r\n                        <Column2>\r\n                            <ImgWrap>\r\n                                <Img src={img} alt={alt} />\r\n                            </ImgWrap>\r\n                        </Column2>\r\n                    </AboutRow>\r\n                </AboutWrapper>\r\n            </AboutContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About\r\n","D:\\my-portfolio\\src\\themes\\theme.js",[],["98","99"],"D:\\my-portfolio\\src\\components\\Slider\\index.js",["100","101","102"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { SliderContainer, SliderContent, Slide, Arrow, Dots, Dot } from './SliderElements'\r\nimport leftArrow from '../../images/left-arrow.svg'\r\nimport rightArrow from '../../images/right-arrow.svg'\r\nimport Title from '../Title'\r\n\r\nconst getWidth = () => window.innerWidth;\r\n\r\n/**\r\n * @function Slider\r\n */\r\nconst Slider = props => {\r\n    const { slides } = props\r\n    const handlers = useSwipeable({\r\n        onSwipedLeft: () => nextSlide(),\r\n        onSwipedRight: () => prevSlide(),\r\n        preventDefaultTouchmoveEvent: true,\r\n        trackMouse: true\r\n    });\r\n\r\n    // Array with elem being the flexbox order of each slide.\r\n    // Exemple with 3 slides [Slide 1, Slide 2, Slide 3] :\r\n    // For a smooth transition when on Slide 1 we need to place them like [Slide 3, Slide 1, Slide 2]\r\n    // To do that we create an order Array with value : [0,1,-1]\r\n    // Each elem of the slides will take the elem from order with same index\r\n    const slideOrder = slides.map((_slide, i) => {\r\n        if (i <= Math.floor(slides.length / 2)) return i;\r\n        return i - slides.length;\r\n    });\r\n\r\n    const [state, setState] = useState({\r\n        activeSlide: 0,\r\n        translate: getWidth() * Math.floor((slides.length - 1) / 2),\r\n        transition: 0.45,\r\n        orders: slideOrder\r\n    })\r\n\r\n    // Var to block spamming next/prev slide\r\n    const [isTransition, setTransition] = useState(false);\r\n    const { activeSlide, translate, orders, transition } = state\r\n\r\n    const autoPlayRef = useRef()\r\n    const transitionRef = useRef()\r\n    const resizeRef = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        autoPlayRef.current = nextSlide\r\n        transitionRef.current = smoothTransition\r\n        resizeRef.current = handleResize\r\n    })\r\n\r\n    useEffect(() => {\r\n        const play = () => {\r\n            autoPlayRef.current()\r\n        }\r\n\r\n        const smooth = () => {\r\n            transitionRef.current()\r\n        }\r\n\r\n        const resize = () => {\r\n            resizeRef.current()\r\n        }\r\n\r\n        let isMounted = true;\r\n        let interval = setInterval(play, props.autoPlay * 1000)\r\n        const transitionEnd = window.addEventListener('transitionend', () => {\r\n            if (isMounted) {\r\n                setTransition(false);\r\n                smooth();\r\n                clearInterval(interval);\r\n                interval = setInterval(play, props.autoPlay * 1000);\r\n            }\r\n        });\r\n        const onResize = window.addEventListener('resize', resize)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n            window.removeEventListener('transitionend', transitionEnd)\r\n            window.removeEventListener('resize', onResize)\r\n        }\r\n    }, [props.autoPlay])\r\n\r\n    const handleResize = () => {\r\n        setState({ ...state, translate: getWidth(), transition: 0 })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (transition === 0) setState({ ...state, transition: 0.45 })\r\n    }, [transition])\r\n\r\n    const smoothTransition = () => {\r\n        let _orders = slideOrder;\r\n\r\n        //To change position after transition end\r\n        //Need just to offset each value to the right activeSlide number of times\r\n        // Ex :\r\n        // ActiveSlide=0, Slide displayed: [Slide3, slide1(active slide), slide2], order : [0,1,-1]\r\n        // ActiveSlide=1, Slide displayed: [Slide1, slide2(active slide), slide3], order : [-1,0,1]\r\n        // ActiveSlide=2, Slide displayed: [Slide2, slide3(active slide), slide1], order : [1,-1,0]\r\n        for (let i = 0; i < activeSlide; i++) {\r\n            _orders.unshift(_orders.pop());\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            orders: _orders,\r\n            transition: 0,\r\n            translate: getWidth() * Math.floor((slides.length - 1) / 2)\r\n        });\r\n    };\r\n\r\n    const nextSlide = () => {\r\n        if (!isTransition) {\r\n            setTransition(true);\r\n            setState({\r\n                ...state,\r\n                translate: translate + getWidth(),\r\n                activeSlide: activeSlide === slides.length - 1 ? 0 : activeSlide + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    const prevSlide = () => {\r\n        if (!isTransition) {\r\n            setTransition(true);\r\n            setState({\r\n                ...state,\r\n                translate: 0,\r\n                activeSlide: activeSlide === 0 ? slides.length - 1 : activeSlide - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    const dotsSlideJump = dotIndex => {\r\n        if (!isTransition && dotIndex !== activeSlide) {\r\n            setTransition(true);\r\n            setState({\r\n                ...state,\r\n                translate: translate + getWidth() * orders[dotIndex],\r\n                activeSlide: dotIndex\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SliderContainer {...handlers}>\r\n            <SliderContent\r\n                translate={translate}\r\n                transition={transition}\r\n                width={getWidth() * slides.length}\r\n            >\r\n                {slides.map((slide, i) => (\r\n                    <Slide content={slide} key={i} width={getWidth()} order={orders[i]} />\r\n\r\n                ))}\r\n            </SliderContent>\r\n            <Title />\r\n\r\n            <Arrow direction=\"left\" onClick={prevSlide}><img src={leftArrow} /></Arrow>\r\n            <Arrow direction=\"right\" onClick={nextSlide}><img src={rightArrow} /></Arrow>\r\n            <Dots>\r\n                {slides.map((slide, i) => (\r\n                    <Dot key={slide + i} onClick={() => dotsSlideJump(i)} activeSlide={activeSlide === i} />\r\n                ))}\r\n            </Dots>\r\n\r\n\r\n        </SliderContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default Slider","D:\\my-portfolio\\src\\components\\Slider\\SliderElements.js",[],"D:\\my-portfolio\\src\\components\\About\\Data.js",[],["103","104"],"D:\\my-portfolio\\src\\components\\Projects\\Data.js",["105","106"],"D:\\my-portfolio\\src\\components\\Sidebar\\index.js",["107","108"],"import React from 'react'\r\nimport { AiFillGithub, AiFillLinkedin } from 'react-icons/ai'\r\nimport { SidebarContainer, Icon, CloseIcon, SidebarMenu, SidebarWrapper, SidebarRoute, SideBtnWrap, SidebarLink, SidebarLink2, NavItem2, NavIconLink } from './SidebarElements'\r\n\r\nconst Sidebar = ({ isOpen, toggle }) => {\r\n    return (\r\n        <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n            <Icon onClick={toggle}>\r\n                <CloseIcon />\r\n            </Icon>\r\n            <SidebarWrapper>\r\n                <SidebarMenu>\r\n                    <SidebarLink to=\"about\" onClick={toggle}>\r\n                        about\r\n                    </SidebarLink>\r\n                    <SidebarLink to=\"portfolio\" onClick={toggle}>\r\n                        portfolio\r\n                    </SidebarLink>\r\n                    <SidebarLink to=\"contact\" onClick={toggle}>\r\n                        contact\r\n                    </SidebarLink>\r\n                    <SidebarLink2>\r\n                        <NavItem2>\r\n                            <NavIconLink to={{ pathname: \"https://github.com/Jonnylie\" }} target=\"_blank\" >\r\n                                <AiFillGithub />\r\n                            </NavIconLink>\r\n                        </NavItem2>\r\n                        <NavItem2>\r\n                            <NavIconLink to={{ pathname: \"https://www.linkedin.com/in/jonny-lie/\" }} target=\"_blank\" >\r\n                                <AiFillLinkedin />\r\n                            </NavIconLink>\r\n                        </NavItem2>\r\n                    </SidebarLink2>\r\n                </SidebarMenu>\r\n\r\n            </SidebarWrapper>\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\my-portfolio\\src\\components\\Sidebar\\SidebarElements.js",[],"D:\\my-portfolio\\src\\App.js",[],["109","110"],"D:\\my-portfolio\\src\\components\\Footer\\FooterElements.js",[],"D:\\my-portfolio\\src\\components\\Footer\\index.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":104,"nodeType":"119","messageId":"120","endLine":6,"endColumn":110},{"ruleId":"117","severity":1,"message":"121","line":6,"column":112,"nodeType":"119","messageId":"120","endLine":6,"endColumn":122},{"ruleId":"117","severity":1,"message":"122","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"123","line":3,"column":136,"nodeType":"119","messageId":"120","endLine":3,"endColumn":143},{"ruleId":"111","replacedBy":"124"},{"ruleId":"113","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":92,"column":8,"nodeType":"128","endLine":92,"endColumn":20,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":162,"column":57,"nodeType":"132","endLine":162,"endColumn":80},{"ruleId":"130","severity":1,"message":"131","line":163,"column":58,"nodeType":"132","endLine":163,"endColumn":82},{"ruleId":"111","replacedBy":"133"},{"ruleId":"113","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":35,"column":5,"nodeType":"137","messageId":"138","endLine":35,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":51,"column":5,"nodeType":"137","messageId":"138","endLine":51,"endColumn":22},{"ruleId":"117","severity":1,"message":"139","line":3,"column":74,"nodeType":"119","messageId":"120","endLine":3,"endColumn":86},{"ruleId":"117","severity":1,"message":"140","line":3,"column":88,"nodeType":"119","messageId":"120","endLine":3,"endColumn":99},{"ruleId":"111","replacedBy":"141"},{"ruleId":"113","replacedBy":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],"no-unused-vars","'NavBtn' is defined but never used.","Identifier","unusedVar","'NavBtnLink' is defined but never used.","'Button' is defined but never used.","'BtnWrap' is defined but never used.",["143"],["144"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["145"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["143"],["144"],"no-dupe-keys","Duplicate key 'gitIconMarginLeft'.","ObjectExpression","unexpected","'SidebarRoute' is defined but never used.","'SideBtnWrap' is defined but never used.",["143"],["144"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [state, transition]",{"range":"148","text":"149"},[3043,3055],"[state, transition]"]