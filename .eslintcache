[{"D:\\my-portfolio\\src\\pages\\index.js":"1","D:\\my-portfolio\\src\\components\\Contact\\index.js":"2","D:\\my-portfolio\\src\\components\\ButtonElements.js":"3","D:\\my-portfolio\\src\\index.js":"4","D:\\my-portfolio\\src\\components\\Projects\\index.js":"5","D:\\my-portfolio\\src\\components\\Navbar\\index.js":"6","D:\\my-portfolio\\src\\components\\Projects\\ProjectsElements.js":"7","D:\\my-portfolio\\src\\components\\Navbar\\NavbarElements.js":"8","D:\\my-portfolio\\src\\components\\Title\\index.js":"9","D:\\my-portfolio\\src\\components\\About\\index.js":"10","D:\\my-portfolio\\src\\themes\\theme.js":"11","D:\\my-portfolio\\src\\components\\Slider\\index.js":"12","D:\\my-portfolio\\src\\components\\Slider\\SliderElements.js":"13","D:\\my-portfolio\\src\\components\\About\\Data.js":"14","D:\\my-portfolio\\src\\components\\Projects\\Data.js":"15","D:\\my-portfolio\\src\\components\\Sidebar\\index.js":"16","D:\\my-portfolio\\src\\components\\Sidebar\\SidebarElements.js":"17","D:\\my-portfolio\\src\\App.js":"18","D:\\my-portfolio\\src\\components\\Footer\\FooterElements.js":"19","D:\\my-portfolio\\src\\components\\Footer\\index.js":"20","D:\\my-portfolio\\src\\components\\About\\AboutElements.js":"21"},{"size":1088,"mtime":1609061549806,"results":"22","hashOfConfig":"23"},{"size":2124,"mtime":1609061506089,"results":"24","hashOfConfig":"25"},{"size":1896,"mtime":1609061543845,"results":"26","hashOfConfig":"25"},{"size":296,"mtime":1609061558626,"results":"27","hashOfConfig":"25"},{"size":8571,"mtime":1610109381713,"results":"28","hashOfConfig":"25"},{"size":3031,"mtime":1609061516327,"results":"29","hashOfConfig":"25"},{"size":3616,"mtime":1609061524130,"results":"30","hashOfConfig":"25"},{"size":2543,"mtime":1613353550719,"results":"31","hashOfConfig":"25"},{"size":1516,"mtime":1609061426632,"results":"32","hashOfConfig":"23"},{"size":1259,"mtime":1609061493645,"results":"33","hashOfConfig":"25"},{"size":50,"mtime":1609061563187,"results":"34","hashOfConfig":"25"},{"size":5280,"mtime":1609205170005,"results":"35","hashOfConfig":"25"},{"size":1891,"mtime":1608468952116,"results":"36","hashOfConfig":"23"},{"size":680,"mtime":1609061473098,"results":"37","hashOfConfig":"25"},{"size":3313,"mtime":1610157857853,"results":"38","hashOfConfig":"25"},{"size":1498,"mtime":1609062622374,"results":"39","hashOfConfig":"25"},{"size":2589,"mtime":1613354497721,"results":"40","hashOfConfig":"25"},{"size":238,"mtime":1609061555814,"results":"41","hashOfConfig":"25"},{"size":1460,"mtime":1609061510219,"results":"42","hashOfConfig":"25"},{"size":2241,"mtime":1609061511588,"results":"43","hashOfConfig":"25"},{"size":2194,"mtime":1609061471844,"results":"44","hashOfConfig":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17irjar",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"opalsl",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\my-portfolio\\src\\pages\\index.js",[],"D:\\my-portfolio\\src\\components\\Contact\\index.js",[],["92","93"],"D:\\my-portfolio\\src\\components\\ButtonElements.js",[],"D:\\my-portfolio\\src\\index.js",[],["94","95"],"D:\\my-portfolio\\src\\components\\Projects\\index.js",[],["96","97"],"D:\\my-portfolio\\src\\components\\Navbar\\index.js",["98","99"],"D:\\my-portfolio\\src\\components\\Projects\\ProjectsElements.js",[],"D:\\my-portfolio\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\my-portfolio\\src\\components\\Title\\index.js",[],"D:\\my-portfolio\\src\\components\\About\\index.js",[],"D:\\my-portfolio\\src\\themes\\theme.js",[],"D:\\my-portfolio\\src\\components\\Slider\\index.js",["100","101","102"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport {\r\n  SliderContainer,\r\n  SliderContent,\r\n  Slide,\r\n  Arrow,\r\n  Dots,\r\n  Dot,\r\n} from \"./SliderElements\";\r\nimport leftArrow from \"../../images/left-arrow.svg\";\r\nimport rightArrow from \"../../images/right-arrow.svg\";\r\nimport Title from \"../Title\";\r\n\r\nconst getWidth = () => window.innerWidth;\r\n\r\n/**\r\n * @function Slider\r\n */\r\nconst Slider = (props) => {\r\n  const { slides } = props;\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => nextSlide(),\r\n    onSwipedRight: () => prevSlide(),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true,\r\n  });\r\n\r\n  // Array with elem being the flexbox order of each slide.\r\n  // Exemple with 3 slides [Slide 1, Slide 2, Slide 3] :\r\n  // For a smooth transition when on Slide 1 we need to place them like [Slide 3, Slide 1, Slide 2]\r\n  // To do that we create an order Array with value : [0,1,-1]\r\n  // Each elem of the slides will take the elem from order with same index\r\n  const slideOrder = slides.map((_slide, i) => {\r\n    if (i <= Math.floor(slides.length / 2)) return i;\r\n    return i - slides.length;\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    activeSlide: 0,\r\n    translate: getWidth() * Math.floor((slides.length - 1) / 2),\r\n    transition: 0.45,\r\n    orders: slideOrder,\r\n  });\r\n\r\n  // Var to block spamming next/prev slide\r\n  const [isTransition, setTransition] = useState(false);\r\n  const { activeSlide, translate, orders, transition } = state;\r\n\r\n  const autoPlayRef = useRef();\r\n  const transitionRef = useRef();\r\n  const resizeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    autoPlayRef.current = nextSlide;\r\n    transitionRef.current = smoothTransition;\r\n    resizeRef.current = handleResize;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const play = () => {\r\n      autoPlayRef.current();\r\n    };\r\n\r\n    const smooth = () => {\r\n      transitionRef.current();\r\n    };\r\n\r\n    const resize = () => {\r\n      resizeRef.current();\r\n    };\r\n\r\n    let isMounted = true;\r\n    let interval = setInterval(play, props.autoPlay * 1000);\r\n    const transitionEnd = window.addEventListener(\"transitionend\", () => {\r\n      if (isMounted) {\r\n        setTransition(false);\r\n        smooth();\r\n        clearInterval(interval);\r\n        interval = setInterval(play, props.autoPlay * 1000);\r\n      }\r\n    });\r\n    const onResize = window.addEventListener(\"resize\", resize);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      window.removeEventListener(\"transitionend\", transitionEnd);\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, [props.autoPlay]);\r\n\r\n  const handleResize = () => {\r\n    setState({ ...state, translate: getWidth(), transition: 0 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transition === 0) setState({ ...state, transition: 0.45 });\r\n  }, [transition]);\r\n\r\n  const smoothTransition = () => {\r\n    let _orders = slideOrder;\r\n\r\n    //To change position after transition end\r\n    //Need just to offset each value to the right activeSlide number of times\r\n    // Ex :\r\n    // ActiveSlide=0, Slide displayed: [Slide3, slide1(active slide), slide2], order : [0,1,-1]\r\n    // ActiveSlide=1, Slide displayed: [Slide1, slide2(active slide), slide3], order : [-1,0,1]\r\n    // ActiveSlide=2, Slide displayed: [Slide2, slide3(active slide), slide1], order : [1,-1,0]\r\n    for (let i = 0; i < activeSlide; i++) {\r\n      _orders.unshift(_orders.pop());\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      orders: _orders,\r\n      transition: 0,\r\n      translate: getWidth() * Math.floor((slides.length - 1) / 2),\r\n    });\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    if (!isTransition) {\r\n      setTransition(true);\r\n      setState({\r\n        ...state,\r\n        translate: translate + getWidth(),\r\n        activeSlide: activeSlide === slides.length - 1 ? 0 : activeSlide + 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    if (!isTransition) {\r\n      setTransition(true);\r\n      setState({\r\n        ...state,\r\n        translate: 0,\r\n        activeSlide: activeSlide === 0 ? slides.length - 1 : activeSlide - 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const dotsSlideJump = (dotIndex) => {\r\n    if (!isTransition && dotIndex !== activeSlide) {\r\n      setTransition(true);\r\n      setState({\r\n        ...state,\r\n        translate: translate + getWidth() * orders[dotIndex],\r\n        activeSlide: dotIndex,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SliderContainer {...handlers}>\r\n      <SliderContent\r\n        translate={translate}\r\n        transition={transition}\r\n        width={getWidth() * slides.length}\r\n      >\r\n        {slides.map((slide, i) => (\r\n          <Slide content={slide} key={i} width={getWidth()} order={orders[i]} />\r\n        ))}\r\n      </SliderContent>\r\n      <Title />\r\n\r\n      <Arrow direction=\"left\" onClick={prevSlide}>\r\n        <img src={leftArrow} />\r\n      </Arrow>\r\n      <Arrow direction=\"right\" onClick={nextSlide}>\r\n        <img src={rightArrow} />\r\n      </Arrow>\r\n      <Dots>\r\n        {slides.map((slide, i) => (\r\n          <Dot\r\n            key={slide + i}\r\n            onClick={() => dotsSlideJump(i)}\r\n            activeSlide={activeSlide === i}\r\n          />\r\n        ))}\r\n      </Dots>\r\n    </SliderContainer>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","D:\\my-portfolio\\src\\components\\Slider\\SliderElements.js",[],["103","104"],"D:\\my-portfolio\\src\\components\\About\\Data.js",[],"D:\\my-portfolio\\src\\components\\Projects\\Data.js",["105","106"],"D:\\my-portfolio\\src\\components\\Sidebar\\index.js",[],"D:\\my-portfolio\\src\\components\\Sidebar\\SidebarElements.js",[],"D:\\my-portfolio\\src\\App.js",[],"D:\\my-portfolio\\src\\components\\Footer\\FooterElements.js",[],"D:\\my-portfolio\\src\\components\\Footer\\index.js",[],"D:\\my-portfolio\\src\\components\\About\\AboutElements.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":16,"column":3,"nodeType":"117","messageId":"118","endLine":16,"endColumn":9},{"ruleId":"115","severity":1,"message":"119","line":17,"column":3,"nodeType":"117","messageId":"118","endLine":17,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":98,"column":6,"nodeType":"122","endLine":98,"endColumn":18,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":168,"column":9,"nodeType":"126","endLine":168,"endColumn":32},{"ruleId":"124","severity":1,"message":"125","line":171,"column":9,"nodeType":"126","endLine":171,"endColumn":33},{"ruleId":"107","replacedBy":"127"},{"ruleId":"109","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":37,"column":3,"nodeType":"131","messageId":"132","endLine":37,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":58,"column":3,"nodeType":"131","messageId":"132","endLine":58,"endColumn":20},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],"no-unused-vars","'NavBtn' is defined but never used.","Identifier","unusedVar","'NavBtnLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["135"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["133"],["134"],"no-dupe-keys","Duplicate key 'gitIconMarginLeft'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [state, transition]",{"range":"138","text":"139"},[2852,2864],"[state, transition]"]