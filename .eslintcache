[{"D:\\my-portfolio\\src\\pages\\index.js":"1","D:\\my-portfolio\\src\\components\\Slider\\index.js":"2","D:\\my-portfolio\\src\\components\\Slider\\SliderElements.js":"3","D:\\my-portfolio\\src\\themes\\theme.js":"4","D:\\my-portfolio\\src\\components\\About\\index.js":"5","D:\\my-portfolio\\src\\components\\Projects\\ProjectsElements.js":"6","D:\\my-portfolio\\src\\components\\About\\AboutElements.js":"7","D:\\my-portfolio\\src\\components\\Navbar\\index.js":"8","D:\\my-portfolio\\src\\components\\Navbar\\NavbarElements.js":"9","D:\\my-portfolio\\src\\components\\Title\\index.js":"10","D:\\my-portfolio\\src\\components\\Projects\\Data.js":"11","D:\\my-portfolio\\src\\components\\Sidebar\\index.js":"12","D:\\my-portfolio\\src\\index.js":"13","D:\\my-portfolio\\src\\components\\About\\Data.js":"14","D:\\my-portfolio\\src\\App.js":"15","D:\\my-portfolio\\src\\components\\Sidebar\\SidebarElements.js":"16","D:\\my-portfolio\\src\\components\\ButtonElements.js":"17","D:\\my-portfolio\\src\\components\\Projects\\index.js":"18","D:\\my-portfolio\\src\\components\\Contact\\index.js":"19"},{"size":1083,"mtime":1608526559963,"results":"20","hashOfConfig":"21"},{"size":5753,"mtime":1608469071915,"results":"22","hashOfConfig":"21"},{"size":1891,"mtime":1608468952116,"results":"23","hashOfConfig":"21"},{"size":48,"mtime":1608205230636,"results":"24","hashOfConfig":"21"},{"size":1366,"mtime":1608473521066,"results":"25","hashOfConfig":"21"},{"size":3552,"mtime":1608473120145,"results":"26","hashOfConfig":"21"},{"size":2211,"mtime":1608473603646,"results":"27","hashOfConfig":"21"},{"size":2718,"mtime":1608523850706,"results":"28","hashOfConfig":"21"},{"size":2538,"mtime":1608514316898,"results":"29","hashOfConfig":"21"},{"size":1690,"mtime":1608509133512,"results":"30","hashOfConfig":"21"},{"size":1350,"mtime":1608509812980,"results":"31","hashOfConfig":"21"},{"size":1707,"mtime":1608514939274,"results":"32","hashOfConfig":"21"},{"size":298,"mtime":1608204993620,"results":"33","hashOfConfig":"21"},{"size":730,"mtime":1608520098292,"results":"34","hashOfConfig":"21"},{"size":235,"mtime":1608309027727,"results":"35","hashOfConfig":"21"},{"size":2667,"mtime":1608515066774,"results":"36","hashOfConfig":"21"},{"size":1030,"mtime":1608515177748,"results":"37","hashOfConfig":"21"},{"size":4798,"mtime":1608515265228,"results":"38","hashOfConfig":"21"},{"size":1961,"mtime":1608529994936,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17irjar",{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\my-portfolio\\src\\pages\\index.js",[],"D:\\my-portfolio\\src\\components\\Slider\\index.js",["90","91","92"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { SliderContainer, SliderContent, Slide, Arrow, Dots, Dot } from './SliderElements'\r\nimport leftArrow from '../../images/left-arrow.svg'\r\nimport rightArrow from '../../images/right-arrow.svg'\r\nimport Title from '../Title'\r\n\r\nconst getWidth = () => window.innerWidth;\r\n\r\n/**\r\n * @function Slider\r\n */\r\nconst Slider = props => {\r\n    const { slides } = props\r\n    const handlers = useSwipeable({\r\n        onSwipedLeft: () => nextSlide(),\r\n        onSwipedRight: () => prevSlide(),\r\n        preventDefaultTouchmoveEvent: true,\r\n        trackMouse: true\r\n    });\r\n\r\n    // Array with elem being the flexbox order of each slide.\r\n    // Exemple with 3 slides [Slide 1, Slide 2, Slide 3] :\r\n    // For a smooth transition when on Slide 1 we need to place them like [Slide 3, Slide 1, Slide 2]\r\n    // To do that we create an order Array with value : [0,1,-1]\r\n    // Each elem of the slides will take the elem from order with same index\r\n    const slideOrder = slides.map((_slide, i) => {\r\n        if (i <= Math.floor(slides.length / 2)) return i;\r\n        return i - slides.length;\r\n    });\r\n\r\n    const [state, setState] = useState({\r\n        activeSlide: 0,\r\n        translate: getWidth() * Math.floor((slides.length - 1) / 2),\r\n        transition: 0.45,\r\n        orders: slideOrder\r\n    })\r\n\r\n    // Var to block spamming next/prev slide\r\n    const [isTransition, setTransition] = useState(false);\r\n    const { activeSlide, translate, orders, transition } = state\r\n\r\n    const autoPlayRef = useRef()\r\n    const transitionRef = useRef()\r\n    const resizeRef = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        autoPlayRef.current = nextSlide\r\n        transitionRef.current = smoothTransition\r\n        resizeRef.current = handleResize\r\n    })\r\n\r\n    useEffect(() => {\r\n        const play = () => {\r\n            autoPlayRef.current()\r\n        }\r\n\r\n        const smooth = () => {\r\n            transitionRef.current()\r\n        }\r\n\r\n        const resize = () => {\r\n            resizeRef.current()\r\n        }\r\n\r\n        let isMounted = true;\r\n        let interval = setInterval(play, props.autoPlay * 1000)\r\n        const transitionEnd = window.addEventListener('transitionend', () => {\r\n            if (isMounted) {\r\n                setTransition(false);\r\n                smooth();\r\n                clearInterval(interval);\r\n                interval = setInterval(play, props.autoPlay * 1000);\r\n            }\r\n        });\r\n        const onResize = window.addEventListener('resize', resize)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n            window.removeEventListener('transitionend', transitionEnd)\r\n            window.removeEventListener('resize', onResize)\r\n        }\r\n    }, [props.autoPlay])\r\n\r\n    const handleResize = () => {\r\n        setState({ ...state, translate: getWidth(), transition: 0 })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (transition === 0) setState({ ...state, transition: 0.45 })\r\n    }, [transition])\r\n\r\n    const smoothTransition = () => {\r\n        let _orders = slideOrder;\r\n\r\n        //To change position after transition end\r\n        //Need just to offset each value to the right activeSlide number of times\r\n        // Ex :\r\n        // ActiveSlide=0, Slide displayed: [Slide3, slide1(active slide), slide2], order : [0,1,-1]\r\n        // ActiveSlide=1, Slide displayed: [Slide1, slide2(active slide), slide3], order : [-1,0,1]\r\n        // ActiveSlide=2, Slide displayed: [Slide2, slide3(active slide), slide1], order : [1,-1,0]\r\n        for (let i = 0; i < activeSlide; i++) {\r\n            _orders.unshift(_orders.pop());\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            orders: _orders,\r\n            transition: 0,\r\n            translate: getWidth() * Math.floor((slides.length - 1) / 2)\r\n        });\r\n    };\r\n\r\n    const nextSlide = () => {\r\n        if (!isTransition) {\r\n            setTransition(true);\r\n            setState({\r\n                ...state,\r\n                translate: translate + getWidth(),\r\n                activeSlide: activeSlide === slides.length - 1 ? 0 : activeSlide + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    const prevSlide = () => {\r\n        if (!isTransition) {\r\n            setTransition(true);\r\n            setState({\r\n                ...state,\r\n                translate: 0,\r\n                activeSlide: activeSlide === 0 ? slides.length - 1 : activeSlide - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    const dotsSlideJump = dotIndex => {\r\n        if (!isTransition && dotIndex !== activeSlide) {\r\n            setTransition(true);\r\n            setState({\r\n                ...state,\r\n                translate: translate + getWidth() * orders[dotIndex],\r\n                activeSlide: dotIndex\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SliderContainer {...handlers}>\r\n            <SliderContent\r\n                translate={translate}\r\n                transition={transition}\r\n                width={getWidth() * slides.length}\r\n            >\r\n                {slides.map((slide, i) => (\r\n                    <Slide content={slide} key={i} width={getWidth()} order={orders[i]} />\r\n\r\n                ))}\r\n            </SliderContent>\r\n            <Title />\r\n\r\n            <Arrow direction=\"left\" onClick={prevSlide}><img src={leftArrow} /></Arrow>\r\n            <Arrow direction=\"right\" onClick={nextSlide}><img src={rightArrow} /></Arrow>\r\n            <Dots>\r\n                {slides.map((slide, i) => (\r\n                    <Dot key={slide + i} onClick={() => dotsSlideJump(i)} activeSlide={activeSlide === i} />\r\n                ))}\r\n            </Dots>\r\n\r\n\r\n        </SliderContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default Slider",["93","94"],"D:\\my-portfolio\\src\\components\\Slider\\SliderElements.js",[],"D:\\my-portfolio\\src\\themes\\theme.js",[],["95","96"],"D:\\my-portfolio\\src\\components\\About\\index.js",["97","98"],"import React from 'react'\r\nimport { Button } from '../ButtonElements'\r\nimport { AboutContainer, AboutWrapper, AboutRow, Column1, Column2, TextWrapper, TopLine, TopLineText, Heading, Subtitle, ImgWrap, Img, BtnWrap } from './AboutElements'\r\n\r\nconst About = ({ lightBg, id, imgStart, topLine, lightText, darkText, firstParagraph, secondParagraph, headline, img, alt }) => {\r\n    return (\r\n        <>\r\n            <AboutContainer lightBg={lightBg} id={id}>\r\n                <AboutWrapper>\r\n                    <AboutRow imgStart={imgStart}>\r\n                        <Column1>\r\n                            <TextWrapper>\r\n                                <Heading lightText={lightText}>{headline}</Heading>\r\n                                <TopLine>&#x2015; <TopLineText>{topLine}</TopLineText> &#x2015;</TopLine>\r\n                                <Subtitle darkText={darkText}>{firstParagraph} <br /><br /> {secondParagraph}</Subtitle>\r\n                            </TextWrapper>\r\n                        </Column1>\r\n                        <Column2>\r\n                            <ImgWrap>\r\n                                <Img src={img} alt={alt} />\r\n                            </ImgWrap>\r\n                        </Column2>\r\n                    </AboutRow>\r\n                </AboutWrapper>\r\n            </AboutContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About\r\n",["99","100"],"D:\\my-portfolio\\src\\components\\Projects\\ProjectsElements.js",[],["101","102"],"D:\\my-portfolio\\src\\components\\About\\AboutElements.js",[],["103","104"],"D:\\my-portfolio\\src\\components\\Navbar\\index.js",["105","106"],"import React, { useState, useEffect } from 'react'\r\nimport { animateScroll as scroll } from 'react-scroll'\r\nimport { FaBars } from 'react-icons/fa'\r\nimport { AiFillGithub, AiFillLinkedin } from 'react-icons/ai'\r\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavIconLink, NavItem2, NavLinks, NavBtn, NavBtnLink } from './NavbarElements'\r\n\r\nconst Navbar = ({ toggle }) => {\r\n\r\n    const toggleHome = () => {\r\n        scroll.scrollToTop();\r\n    }\r\n\r\n    const [scrollNav, setScrollNav] = useState(false)\r\n\r\n    const changeNav = () => {\r\n        if (window.scrollY >= 80) {\r\n            setScrollNav(true)\r\n        } else {\r\n            setScrollNav(false)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', changeNav)\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Nav scrollNav={scrollNav}>\r\n                <NavbarContainer>\r\n                    <NavLogo to='/' onClick={toggleHome}>𝑱𝑳</NavLogo>\r\n                    <MobileIcon onClick={toggle}>\r\n                        <FaBars />\r\n                    </MobileIcon>\r\n                    <NavMenu>\r\n                        <NavItem>\r\n                            <NavLinks to=\"about\"\r\n                                smooth={true} duration={500} spy={true} exact='true' offset={-80}\r\n                            >About 🧑</NavLinks>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLinks to='projects'\r\n                                smooth={true} duration={500} spy={true} exact='true' offset={-80}\r\n                            >Projects 📚</NavLinks>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLinks to='contact'\r\n                                smooth={true} duration={500} spy={true} exact='true' offset={-80}\r\n                            >Contact ☎️</NavLinks>\r\n                        </NavItem>\r\n                    </NavMenu>\r\n                    <NavMenu>\r\n                        <NavItem2>\r\n                            <NavIconLink to={{ pathname: \"https://github.com/Jonnylie\" }} target=\"_blank\" >\r\n                                <AiFillGithub />\r\n                            </NavIconLink>\r\n                        </NavItem2>\r\n                        <NavItem2>\r\n                            <NavIconLink to={{ pathname: \"https://www.linkedin.com/in/jonny-lie/\" }} target=\"_blank\" >\r\n                                <AiFillLinkedin />\r\n                            </NavIconLink>\r\n                        </NavItem2>\r\n                    </NavMenu>\r\n                </NavbarContainer>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar\r\n",["107","108"],"D:\\my-portfolio\\src\\components\\Navbar\\NavbarElements.js",[],["109","110"],"D:\\my-portfolio\\src\\components\\Title\\index.js",[],"D:\\my-portfolio\\src\\components\\Projects\\Data.js",["111"],"D:\\my-portfolio\\src\\components\\Sidebar\\index.js",["112","113"],"import React from 'react'\r\nimport { AiFillGithub, AiFillLinkedin } from 'react-icons/ai'\r\nimport { SidebarContainer, Icon, CloseIcon, SidebarMenu, SidebarWrapper, SidebarRoute, SideBtnWrap, SidebarLink, SidebarLink2, NavItem2, NavIconLink } from './SidebarElements'\r\n\r\nconst Sidebar = ({ isOpen, toggle }) => {\r\n    return (\r\n        <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n            <Icon onClick={toggle}>\r\n                <CloseIcon />\r\n            </Icon>\r\n            <SidebarWrapper>\r\n                <SidebarMenu>\r\n                    <SidebarLink to=\"about\" onClick={toggle}>\r\n                        about\r\n                    </SidebarLink>\r\n                    <SidebarLink to=\"portfolio\" onClick={toggle}>\r\n                        portfolio\r\n                    </SidebarLink>\r\n                    <SidebarLink to=\"contact\" onClick={toggle}>\r\n                        contact\r\n                    </SidebarLink>\r\n                    <SidebarLink2>\r\n                        <NavItem2>\r\n                            <NavIconLink to={{ pathname: \"https://github.com/Jonnylie\" }} target=\"_blank\" >\r\n                                <AiFillGithub />\r\n                            </NavIconLink>\r\n                        </NavItem2>\r\n                        <NavItem2>\r\n                            <NavIconLink to={{ pathname: \"https://www.linkedin.com/in/jonny-lie/\" }} target=\"_blank\" >\r\n                                <AiFillLinkedin />\r\n                            </NavIconLink>\r\n                        </NavItem2>\r\n                    </SidebarLink2>\r\n                </SidebarMenu>\r\n\r\n            </SidebarWrapper>\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\my-portfolio\\src\\index.js",[],"D:\\my-portfolio\\src\\components\\About\\Data.js",[],["114","115"],"D:\\my-portfolio\\src\\App.js",[],"D:\\my-portfolio\\src\\components\\Sidebar\\SidebarElements.js",[],"D:\\my-portfolio\\src\\components\\ButtonElements.js",[],"D:\\my-portfolio\\src\\components\\Projects\\index.js",[],"D:\\my-portfolio\\src\\components\\Contact\\index.js",[],{"ruleId":"116","severity":1,"message":"117","line":92,"column":8,"nodeType":"118","endLine":92,"endColumn":20,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":162,"column":57,"nodeType":"122","endLine":162,"endColumn":80},{"ruleId":"120","severity":1,"message":"121","line":163,"column":58,"nodeType":"122","endLine":163,"endColumn":82},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":3,"column":136,"nodeType":"131","messageId":"132","endLine":3,"endColumn":143},{"ruleId":"123","replacedBy":"134"},{"ruleId":"125","replacedBy":"135"},{"ruleId":"123","replacedBy":"136"},{"ruleId":"125","replacedBy":"137"},{"ruleId":"123","replacedBy":"138"},{"ruleId":"125","replacedBy":"139"},{"ruleId":"129","severity":1,"message":"140","line":5,"column":104,"nodeType":"131","messageId":"132","endLine":5,"endColumn":110},{"ruleId":"129","severity":1,"message":"141","line":5,"column":112,"nodeType":"131","messageId":"132","endLine":5,"endColumn":122},{"ruleId":"123","replacedBy":"142"},{"ruleId":"125","replacedBy":"143"},{"ruleId":"123","replacedBy":"144"},{"ruleId":"125","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":31,"column":5,"nodeType":"148","messageId":"149","endLine":31,"endColumn":16},{"ruleId":"129","severity":1,"message":"150","line":3,"column":74,"nodeType":"131","messageId":"132","endLine":3,"endColumn":86},{"ruleId":"129","severity":1,"message":"151","line":3,"column":88,"nodeType":"131","messageId":"132","endLine":3,"endColumn":99},{"ruleId":"123","replacedBy":"152"},{"ruleId":"125","replacedBy":"153"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["154"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'BtnWrap' is defined but never used.",["155"],["156"],["155"],["156"],["155"],["156"],"'NavBtn' is defined but never used.","'NavBtnLink' is defined but never used.",["155"],["156"],["155"],["156"],"no-dupe-keys","Duplicate key 'techStacks2'.","ObjectExpression","unexpected","'SidebarRoute' is defined but never used.","'SideBtnWrap' is defined but never used.",["155"],["156"],{"desc":"157","fix":"158"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [state, transition]",{"range":"159","text":"160"},[3043,3055],"[state, transition]"]